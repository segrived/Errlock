<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NonProductionServer" xml:space="preserve">
    <value>Использутеся веб-сервер, который не предназначен для работы в продакшене. Использование таких серверов может очень сильно замедлять работу приложения, не иметь средств для тонкой настройки своей работы и иметь проблемы безопасности. Рекомендуется использовать известные веб-сервера, если данный сайт работает в продкшене.</value>
  </data>
  <data name="OpenResource" xml:space="preserve">
    <value>Сервер ответил с кодом 200, и это обычно означает, что доступ к данному ресурсу неограничен. Возможно, что при переходе по данной ссылке, веб-сервер отдает список файлов (что обычно нежелательно). Рекомендуется проверить данную страницу, и при необходимости ограничить доступ анонимных пользователей к ней.</value>
  </data>
  <data name="PasswordMatch" xml:space="preserve">
    <value>Ни один из триггеров не сработал,а это значит, что, возможно, пароль подошел к аккаунту. Если это действительно так, значит пароль попадает в категорию "небезопасных" и его рекомендуется сменить как можно быстрее.</value>
  </data>
  <data name="ServerInfo" xml:space="preserve">
    <value>Информация о используемом веб-сервере может быть полезна в случаях, когда используемая версия веб-сервера может быть уязивима.</value>
  </data>
  <data name="SpecialHeaders" xml:space="preserve">
    <value>В ответе сервера включены нестандартные поля (поля, названия которых начинаются с "X-"). Это нормальное поведение,но информация о наличие таких полей может быть полезной, т.к. некоторые из них (например X-XSS-Protection) влияют на безопасность веб-приложения. Дополнительная информация здесь: http://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Common_non-standard_response_fields</value>
  </data>
  <data name="SuspiciousUrl401" xml:space="preserve">
    <value>Сервер ответил с кодом 401 при попытке загрузить страницу. Для доступа к данному ресурсу требуется авторизация. Возможно, что авторизация не настроена должным образом, и злоумышленник может получить доступ к системе (например при небезопасном пароле).</value>
  </data>
  <data name="SuspiciousUrl403" xml:space="preserve">
    <value>Сервер ответил с кодом 403 при попытке загрузить страницу. Обычно это нормальное поведение, но иногда такие страницы могут отображать приватный контент, несмотря на ошибку доступа.</value>
  </data>
  <data name="TooManyScripts" xml:space="preserve">
    <value>На странице подключено слишком много внешних скритов. Это можно достаточно сильно уменьшить скорость закгрузки страницы. Рекодендуется, при возможности, минифицировать файлы скритов в один скрипт для более быстрой загрузки.</value>
  </data>
  <data name="XssInjection" xml:space="preserve">
    <value />
  </data>
  <data name="XssProtectionDisabled" xml:space="preserve">
    <value>Если веб-сервер отправляет заголовок X-XSS-Protection со значением 0, то веб-браузер не будет выполнять проверки на Reflected-XSS инъекции, что может очень сильно снизить защиту веб-приложения.</value>
  </data>
</root>